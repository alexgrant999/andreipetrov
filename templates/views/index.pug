extends ../layouts/default

block css
	style.
		body, html {
		height: 100%;
		margin: 0;
		}

		.parent{
		display: flex;
		justify-content: center;
		align-items: center;
		}
		.title {
			opacity: .9;
			position: absolute;
			top: 5%;
		}
		.child{
			opacity: .9;
			position: absolute;
			top: 50%;
		}
		


		.bg {
			/* The image used */
			background-size: cover;
			background-position: center;

			-webkit-transition: background-image 1s ease-in-out;
			transition: background-image 1s ease-in-out;




			/* Full height */
			height: 100%;

			/* Center and scale the image nicely */
			background-position: center;
			background-repeat: no-repeat;
			background-size: cover;
			}
block content


	#image-head.bg.d-flex.flex-column.align-items-center.justify-content-center
	.parent
		h1.title(style='color:#c48421;font-family: serif;font-size: 4rem;') Andrei Petrov
		a.child.btn.btn-primary.btn-lg(style='color:yellow',href='/works',role='button') Enter


block page-js
	- theImage = []

	each val, i in images
		- theImage[i]="'" + val._.image.fill(1600,1000) + "'"
	

	script. 
		var slidNum = 0;
		var BGimages = [!{theImage}]


		
		const node = document.getElementById("image-head");

		const cycleImages = (images, container, step) => {
			images.forEach((image, index) => (
			setTimeout(() => {
				container.style.backgroundImage = `url(${image})`  
			}, step * (index + 1))
		))
		setTimeout(() => cycleImages(images, container, step), step * images.length)
		}

		cycleImages(BGimages, node, 3000)

	script.
		function findSize() {
		var w = window.innerWidth;
		var h = window.innerHeight;
		}


		